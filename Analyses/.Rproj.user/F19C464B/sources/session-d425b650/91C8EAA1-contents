---
title: "bold-GLM_preparation"
author: "Jennifer Mosley"
date: "2024-07-18"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## Install/Initialize Packages

```{r}
library(dplyr)
library(ggplot2)
```

## Import Dataset and Clean/Factorize

```{r}
data <- read.csv("~/GitLab/SecondYearProject/MemoryMaps/Data/processed/fullData.csv")
data <- data[ ,-c(1,2)]
data$subID <- as.factor(data$subID)
```

## Centrality Single-Subject

### Create a centrality dataframe and assess centrality values

```{r}
cent <- data[ , c(1,2,4:6)]
hist(cent$outdegree) 

# Frequency with ggplot (use for presentations)
cent %>%
  ggplot(aes(outdegree)) + 
  geom_histogram() +
  theme_blank()

# with n=23, most of outdegree values are below 5; heavily skewed
# with n=34, we are seeing the same heavy skew toward 0 outward edges/connections (low outd)

hist(cent$indegree) 
# with n=23, most of outdegree values are below 5; heavily skewed
# with n=34, we are seeing the same heavy skew toward 0 outward edges/connections (low ind)

hist(cent$degree) # general connections, regardless of direction
```

### Center and scale centrality data

```{r}
cent$outdegree_scaled <- as.vector(scale(cent$outdegree))
hist(cent$outdegree_scaled)

cent$indegree_scaled <- as.vector(scale(cent$indegree))
hist(cent$indegree_scaled)
```

### Prepare within-subjects centrality data frame

#### Subset next subject

```{r}
# Create dataframe including only the data for the current subject
currentSubj <- subset(cent, subID == 2)
```

#### Check Distribution and Median

```{r}
# Check distribution of outdegree vs. centered/scaled outdegree
hist(currentSubj$outdegree) # See the middle point
hist(currentSubj$outdegree_scaled)

# Check median
median(currentSubj$outdegree) # See the middle point
median(currentSubj$outdegree_scaled)

# Check distribution of indegree vs. centered/scaled indegree
hist(currentSubj$indegree) # See the middle point
hist(currentSubj$indegree_scaled)

# Check median
median(currentSubj$indegree) # See the middle point
median(currentSubj$indegree_scaled)
```

#### Perform Log Transformations (If necessary)

##### Included from a previous exploration. Data is skewed but centering and scaling alone seems to work okay.

```{r eval=FALSE, include=FALSE}
# Without within-subjects log transformation - outdegree
hist(currentSubj$outdegree)
hist(currentSubj$outdegree_scaled)
median(currentSubj$outdegree) # See the middle point
median(currentSubj$outdegree_scaled)

currentSubj$outdegree_log <- log(currentSubj$outdegree_scaled) # Compute log transformation
currentSubj$outdegree_log[is.infinite(currentSubj$outdegree_log)] <- 0 # Replace Infs to 0s

# With log transformation - outdegree
hist(currentSubj$outdegree_log) # Our new distribution is slightly more evenly distributed
median(currentSubj$outdegree_log) # See new middle point

# Without log transformation - indegree
hist(currentSubj$indegree)
hist(currentSubj$indegree_scaled)
median(currentSubj$indegree) # See the middle point
median(currentSubj$indegree_scaled)

currentSubj$indegree_log <- log(currentSubj$indegree_scaled) # Compute log transformation
currentSubj$indegree_log[is.infinite(currentSubj$indegree_log)] <- 0 # Replace Infs to 0s (result of log transforming 0s)

# With log transformation - indegree
hist(currentSubj$indegree_log) # Our new distribution is slightly more evenly distributed
median(currentSubj$indegree_log) # See new middle point
```

### Add within-subject centrality labels (1/0s) and download

#### High v. Low Centrality [Outdegree / Indegree] (Effect of high vs. low centrality

within directions (outward connections vs inward connections)

```{r}
# For outdegree onset coding - change for each new subject
# outdegree above vs. below subject median 
sub108 <- currentSubj %>%
  mutate(high_outdegree = if_else(outdegree_scaled >= median(outdegree_scaled), 1, 0)) %>%
  mutate(low_outdegree = if_else(outdegree_scaled < median(outdegree_scaled), 1, 0))

# For indegree onset coding - change for each new subject
# indegree above vs. below subject median
sub108 <- sub108 %>%
  mutate(high_indegree = if_else(indegree_scaled >= median(indegree_scaled), 1, 0)) %>%
  mutate(low_indegree = if_else(indegree_scaled < median(indegree_scaled), 1, 0))

print(sub108)
```

#### Outdegree v. Indegree Centrality (Effect of predominance of Outward vs. Inward

connections in predicting BOLD response in brain regions)

```{r}
# For onset coding - change for each new subject
# outdegree > indegree = outdegree mem // indegree > outdegree = indegree mem

sub108 <- sub108 %>%
  mutate(outdegree_mem = if_else(outdegree_scaled > indegree_scaled, 1, 0)) %>%
  mutate(indegree_mem = if_else(indegree_scaled > outdegree_scaled, 1, 0))

# If outdegree_mem = 1, the memory has more outward connections to other mems
# If indegree_mem = 1, the memory has more inward connections to other mems
# If both are 0, the memory may have no connections to other mems, or equal 
# connections in both outward/inward directions

print(sub108)
```

#### High vs. Low Centrality (Effect of predominance in all

connections in predicting BOLD response in brain regions)

```{r}
# For onset coding - change for each new subject
# degree > median(degree) = high (degree) centrality
# degree < median(degree) = low (degree) centrality

# Center and scale degree centrality data
sub108$degree_scaled <- as.vector(scale(sub108$degree))

# Create labels in subject dataframe
sub108 <- sub108 %>%
  mutate(high_degree = if_else(degree_scaled > median(degree_scaled), 1, 0)) %>%
  mutate(low_degree = if_else(degree_scaled < median(degree_scaled), 1, 0))

# If outdegree_mem = 1, the memory has more outward connections to other mems
# If indegree_mem = 1, the memory has more inward connections to other mems
# If both are 0, the memory may have no connections to other mems, or equal 
# connections in both outward/inward directions

print(sub108)

write.csv(sub108,
          "/Users/jennifer/GitLab/SecondYearProject/MemoryMaps/Analyses/MM_imaging/onset_files/sub108.csv")
```

#### Compile and Check

```{r}

centralityDf <- data.frame()

# Pull applicable object names#
df_list <- grep("^sub\\d", names(.GlobalEnv), value = TRUE)
 
# Combine dataframes into one object
centralityDf <- do.call(bind_rows, mget(df_list))

centralityDf %>%
  ggplot(aes(degree_scaled)) + 
  geom_histogram() +
  theme_blank()

write.csv(centralityDf,"centralityDf.csv")
```
