---
title: "R Notebook"
output: html_notebook
---

```{r}
#library(groundhog)

pkgs <-  c("tidyverse","here", "lmerTest", "sjPlot","broom.mixed", "kableExtra", "ggeffects", "gt", "brms", "bayestestR","ggdist", "pheatmap", "heatmaply","pheatmap","gplots","RColorBrewer", "tm", "wordcloud", "psych", "wesanderson","patchwork", "broom.mixed", "dplyr", "gtsummary")

pacman::p_load("tidyverse","here", "lmerTest", "sjPlot","broom.mixed", "kableExtra", "ggeffects", "gt", "brms", "bayestestR","ggdist", "pheatmap", "heatmaply","pheatmap","gplots","RColorBrewer", "tm", "wordcloud", "psych", "wesanderson","patchwork", "broom.mixed", "dplyr", "gtsummary","ordinal","r2glmm")

update.packages(pkgs)

library(lmerTest)
library(dplyr)

# Useful resources Jake imported from S2 analysis
devtools::source_url("https://raw.githubusercontent.com/JacobElder/MiscellaneousR/master/corToOne.R")
devtools::source_url("https://raw.githubusercontent.com/JacobElder/MiscellaneousR/master/plotCommAxes.R")
devtools::source_url("https://raw.githubusercontent.com/JacobElder/MiscellaneousR/master/named.effects.ref.R")

# Import fullLong includes memories for each subject
fullLong <- read.csv("fullLong.csv")
fullLong <- fullLong[-1, ]

# Import fullShort - doesn't include memories for each subject
fullShort <- read.csv("fullShort.csv")
fullShort <- fullShort[-1, ]
# rankData <- arrow::read_parquet(here("RepData/rankings2.parquet"))

# Join fullLong and fullShort
fullData <- fullLong %>% full_join(fullShort, by = c("subID"))
fullData$subID <- as.factor(fullData$subID)

# Download fullData file for separate analysis (onset file creation)
write.csv(fullData,"fullData.csv")

# pal1 <-n colorRampPalette(brewer.pal(11,"BrBG"))(227)
pal <- colorRampPalette(wes_palette("Zissou1", 5))(length(unique(fullLong$subID)))
```

## 1.) Indegree pos assoc with positivity. Indegree neg assoc with negativity.

```{r}
m <- lmer(scale(positive) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)

tbl_regression(m) %>% as_gt()
# Indegree (counterfactually-central, such that other memories would not have happened without the target memory) memories closely predict self-reported positivity of memories)

m <-lmer( scale(vad_pos) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)

tbl_regression(m) %>% as_gt()
```

```{r}
m<-lmer( scale(negative) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)

tbl_regression(m) %>% as_gt()
#
```

```{r}
m<-lmer( scale(vad_pos) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
r2beta(m)
```

```{r}
m<-lmer( scale(vad_pos) ~  scale(strengthOut) + scale(strengthIn) + numID + scale(length) + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## Does degree centrality predict memory IMPORTANCE?

\>\>\>

```{r}
m <-lmer( scale(importance) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
# Personal importance of the memory is more equally associated with outdegree and indegree within the memory network

m<-lmer( scale(importance) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## Does degree centrality predict memory CLARITY?

\>\>\>

```{r}
m<-lmer( scale(clear) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(clear) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## Does degree centrality predict memory AGENCY?

\>\>\>

```{r}
{r}
m<-lmer( scale(agency) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(agency) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## Does degree centrality predict memory EASE OF RECALL?

\>\>\>

```{r}
m<-lmer( scale(easy) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(Easy) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## Does degree centrality predict memory TRANSFORMATIVENESS?

\>\>\>

```{r}
m<-lmer( scale(transformativeness) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(transformativeness) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

## Does degree centrality predict memory CHANGEABILITY?

\>\>\>

```{r}
m<-lmer( scale(change) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tbl_regression(m) %>% as_gt()

m<-lmer( scale(change) ~  scale(strengthOut) + scale(strengthIn) + numID + ( scale(strengthOut) + scale(strengthIn) | subID), data=fullData)
tbl_regression(m) %>% as_gt()
```

# Visualizations

## Fundamental (FUND)

```{r}
mF<-lmer( scale(Fund) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tidy(mF)


tbl_regression(mF) %>% as_gt()
ggpredict(m, terms="outdegree") %>% plot(colors="orange") +
  labs(
    x = "Outdegree Centrality",
    y = "Fundamental (Study 2)",
  )
```

## Representative (REP)

```{r}
mR<-lmer( scale(Rep) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tidy(mR)

tbl_regression(mR) %>% as_gt()
ggpredict(m, terms="outdegree") %>% plot(colors="blue") +
  labs(
    x = "Outdegree Centrality",
    y = "Representative (Study 2)",
  )
```

## Changeability (CHAN)

```{r}
mC<-lmer( scale(Chan) ~  scale(outdegree) + scale(indegree) + numID + ( scale(outdegree) + scale(indegree) | subID), data=fullData)
tidy(mC)


tbl_regression(mC) %>% as_gt()
ggpredict(m, terms="outdegree") %>% plot(colors="brown") +
  labs(
    x = "Outdegree Centrality",
    y = "Transformative (Study 2)",
  )
```
