"0","```r
# _I1 shouldn't be in names
colnames(rawDf) <- gsub(\"_I1\", \"\", colnames(rawDf))

# Qualtrics loop and merge was defaulting to numbering the blocks as 38 through 63 instead
# of 2 through 30, so had to fix all instance
length(grep(\"Identity Nominations\",colnames(rawDf))) # Are there 30?
```"
"1","[1] 30
"
"0","```r
inds <- grep(\"_35\",colnames(rawDf)) # what are indices where indexing goes awry
for(i in inds){
  
  #name <- str_extract(colnames(rawDf)[i], \"[^_]+\") # get variable name
  #colnames(rawDf)[(i-1):(i+28)] <- paste0(name,\"_\",1:30) # replace suffix numbering
  
  # split variable names based on underscores
  listOfColNames <- strsplit(colnames(rawDf)[(i-1):(i+28)],split=\"_\")
  for(t in 1:30){ # iterate through each element and relabel suffix (e.g., 35 to 2)
    listOfColNames[[t]][length(listOfColNames[[t]])] <- t
  }
  # collapse character vector into one string
  listOfColNames <- lapply(listOfColNames, function(x) paste(x, sep=\"_\",collapse=\"_\"))
  colnames(rawDf)[(i-1):(i+28)] <- unlist(listOfColNames) # assign
  
  # for(j in 1:30){
  #   if(t < 10){
  #     colnames(rawDf)
  #   }else{
  #     
  #   }
  #   t + 1
  # }
  
}

inds <- grep(\"^35_\",colnames(rawDf)) # what are indices where indexing goes awry
for(j in 34:63){
  if(j==34){
    colnames(rawDf) <- gsub(x = colnames(rawDf), pattern = paste0(\"^\",(j-33),\"_\"), replacement = paste0(\"M\",(j-33),\"_\"))
  }else{
    colnames(rawDf) <- gsub(x = colnames(rawDf), pattern = paste0(\"^\",j,\"_\"), replacement = paste0(\"M\",(j-33),\"_\"))
  }
  
if(any(colnames(rawDf)==\"4M1_Relations\")){
  print(\"Something is messed up\")
  break
}
    
}

# Shorten Identity Nominations label
rawDf <- dplyr::rename_with(rawDf, ~ gsub(\"Identity Nominations\", \"IdNoms\", .x, fixed = TRUE))

rawDf <- as_tibble(rawDf)
```"
